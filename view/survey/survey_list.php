<?php
/* Copyright (C) 2024 EVARISK <technique@evarisk.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

/**
 * \file    view/survey/survey_list.php
 * \ingroup digiquali
 * \brief   List page for survey
 */

// Load DigiQuali environment
if (file_exists('../digiquali.main.inc.php')) {
    require_once __DIR__ . '/../digiquali.main.inc.php';
} elseif (file_exists('../../digiquali.main.inc.php')) {
    require_once __DIR__ . '/../../digiquali.main.inc.php';
} else {
    die('Include of digiquali main fails');
}

// Load Dolibarr libraries
require_once DOL_DOCUMENT_ROOT . '/core/class/html.formcompany.class.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/date.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/company.lib.php';
require_once DOL_DOCUMENT_ROOT . '/projet/class/project.class.php';

if (isModEnabled('categorie')) {
    require_once DOL_DOCUMENT_ROOT . '/core/class/html.formcategory.class.php';
    require_once DOL_DOCUMENT_ROOT . '/categories/class/categorie.class.php';
}

require_once DOL_DOCUMENT_ROOT . '/core/lib/company.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/contact.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/project.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/product.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/usergroups.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/invoice.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/order.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/contract.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/ticket.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/stock.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/sendings.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/propal.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/supplier_proposal.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/fourn.lib.php';

// Load Saturne libraries
require_once __DIR__ . '/../../../saturne/class/saturnesignature.class.php';

// load DigiQuali libraries
require_once __DIR__ . '/../../lib/digiquali_sheet.lib.php';

require_once __DIR__ . '/../../class/survey.class.php';
require_once __DIR__ . '/../../class/sheet.class.php';

// Global variables definitions
global $conf, $db, $hookmanager, $langs, $user;

// Load translation files required by the page
saturne_load_langs(['other', 'bills', 'projects', 'orders', 'companies', 'product', 'productbatch', 'task', 'contracts']);

// Get list parameters
$action      = GETPOST('action', 'aZ09') ?GETPOST('action', 'aZ09') : 'view'; // The action 'add', 'create', 'edit', 'update', 'view', ...
$massaction  = GETPOST('massaction', 'alpha'); // The bulk action (combo box choice into lists)
$show_files  = GETPOST('show_files', 'int');   // Show files area generated by bulk actions ?
$confirm     = GETPOST('confirm', 'alpha');    // Result of a confirmation
$cancel      = GETPOST('cancel', 'alpha');     // We click on a Cancel button
$toselect    = GETPOST('toselect', 'array');   // Array of ids of elements selected into a list
$contextpage = GETPOST('contextpage', 'aZ') ? GETPOST('contextpage', 'aZ') : 'surveylist'; // To manage different context of search
$backtopage  = GETPOST('backtopage', 'alpha'); // Go back to a dedicated page
$optioncss   = GETPOST('optioncss', 'aZ');     // Option for the css output (always '' except when 'print')
$fromtype    = GETPOST('fromtype', 'alpha');   // Element type
$fromid      = GETPOST('fromid', 'int');       // Element id
$mode        = GETPOST('mode', 'aZ');

// Get pagination parameters
$limit     = GETPOST('limit', 'int') ? GETPOST('limit', 'int') : $conf->liste_limit;
$sortfield = GETPOST('sortfield', 'aZ09comma');
$sortorder = GETPOST('sortorder', 'aZ09comma');
$page      = GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST('page', 'int');

if (empty($page) || $page < 0 || GETPOST('button_search', 'alpha') || GETPOST('button_removefilter', 'alpha')) { // If $page is not defined, or '' or -1 or if we click on clear filters.
    $page = 0;
}

$offset   = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;

// Initialize objects
// Technical objets
$object         = new Survey($db);
$signatory      = new SaturneSignature($db, 'digiquali', $object->element);
$sheet          = new Sheet($db);
$extrafields    = new ExtraFields($db);
$userTmp        = new User($db);
if (isModEnabled('societe')) {
    $thirdparty = new Societe($db);
    $contact    = new Contact($db);
}

// View objects
$form = new Form($db);

$hookmanager->initHooks(['surveylist']); // Note that conf->hooks_modules contains array

// Fetch optionals attributes and labels
$extrafields->fetch_name_optionals_label($object->table_element);

if (isModEnabled('category')) {
    $search_category_array = GETPOST('search_category_survey_list', 'array');
}

$search_array_options = $extrafields->getOptionalsFromPost($object->table_element, '', 'search_');

// Default sort order (if not yet defined by previous GETPOST)
if (!$sortfield) {
    reset($object->fields);   // Reset is required to avoid key() to return null
    $sortfield = 't.date_creation'; // Set here default search field. By default, date_creation
}
if (!$sortorder) {
    $sortorder = 'DESC';
}

$linkableElements = get_sheet_linkable_objects();

$nbLinkableElements = 0;
$objectPosition     = 20;
foreach($linkableElements as $linkableElementType => $linkableElement) {
	$className  = $linkableElement['className'];

    if ((empty($fromtype) && $linkableElement['conf'] > 0) || ($fromtype == $linkableElement['link_name'])) {
        $arrayfields['t.' . $linkableElement['post_name']] = [
            'type'     => 'integer:' . $className . ':' . $linkableElement['class_path'],
            'label'    => $langs->trans($linkableElement['langs']) . ' ' . $langs->trans('controlled'),
            'enabled'  => '1',
            'position' => $objectPosition,
            'notnull'  => 0,
            'visible'  => 5,
            'checked'  => 1
        ];

        $object->fields[$linkableElement['post_name']]                = $arrayfields['t.' . $linkableElement['post_name']];
        $elementElementFields[$linkableElement['post_name']]          = $linkableElement['link_name'];
        $linkNameElementCorrespondence[$linkableElement['link_name']] = $linkableElement;
        $objectPosition++;
        $nbLinkableElements++;

        if (!empty($fromtype)) {
            $objectLinked = new $className($db);
            $objectLinked->fetch($fromid);
        }
    }
}

// Initialize array of search criterias
$search_all = GETPOST('search_all') ? GETPOST('search_all') : GETPOST('sall');
$search = [];
foreach ($object->fields as $key => $val) {
    if (GETPOST('search_' . $key, 'alpha') !== '') {
        $search[$key] = GETPOST('search_' . $key, 'alpha');
    }
    if (preg_match('/^(date|timestamp|datetime)/', $val['type'])) {
        $search[$key . '_dtstart'] = dol_mktime(0, 0, 0, GETPOST('search_' . $key . '_dtstartmonth', 'int'), GETPOST('search_' . $key . '_dtstartday', 'int'), GETPOST('search_' . $key . '_dtstartyear', 'int'));
        $search[$key . '_dtend'] = dol_mktime(23, 59, 59, GETPOST('search_' . $key . '_dtendmonth', 'int'), GETPOST('search_' . $key . '_dtendday', 'int'), GETPOST('search_' . $key . '_dtendyear', 'int'));
    }
}

if(!empty($fromtype)) {
    $search_key = array_search($fromtype, $elementElementFields);
    $search[$search_key] = $fromid;
    if ($fromtype == 'fk_sheet') {
        $search['fk_sheet'] = $fromid;
    }
}

// List of fields to search into when doing a "search in all"
$fieldstosearchall = [];
foreach ($object->fields as $key => $val) {
    if (!empty($val['searchall'])) {
        $fieldstosearchall['t.' . $key] = $val['label'];
    }
}

// Definition of array of fields for columns
$arrayfields = [];
foreach ($object->fields as $key => $val) {
    // If $val['visible']==0, then we never show the field
    if (!empty($val['visible'])) {
        $visible = (int)dol_eval($val['visible'], 1);
        $arrayfields['t.' . $key] = [
            'label'    => $val['label'],
            'checked'  => (($visible < 0) ? 0 : 1),
            'enabled'  => ($visible != 3 && dol_eval($val['enabled'], 1)),
            'position' => $val['position'],
            'help'     => $val['help'] ?? ''
        ];
    }
}

// Extra fields
include DOL_DOCUMENT_ROOT . '/core/tpl/extrafields_list_array_fields.tpl.php';

$object->fields = dol_sort_array($object->fields, 'position');
$arrayfields    = dol_sort_array($arrayfields, 'position');

// Security check (enable the most restrictive one) - Protection if external user
$permissiontoread   = $user->rights->digiquali->survey->read;
$permissiontoadd    = $user->rights->digiquali->survey->write;
$permissiontodelete = $user->rights->digiquali->survey->delete;
saturne_check_access($permissiontoread);

/*
 * Actions
 */


$parameters = [];
$reshook    = $hookmanager->executeHooks('doActions', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks
if ($reshook < 0) {
    setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');
}

if (empty($reshook)) {
    if (GETPOST('cancel', 'alpha')) {
        $action = 'list';
        $massaction = '';
    }
    if (!GETPOST('confirmmassaction', 'alpha') && $massaction != 'presend' && $massaction != 'confirm_presend') {
        $massaction = '';
    }

    // Selection of new fields
    include DOL_DOCUMENT_ROOT . '/core/actions_changeselectedfields.inc.php';

    // Purge search criteria.
    if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')) { // All tests are required to be compatible with all browsers
        foreach ($object->fields as $key => $val) {
            $search[$key] = '';
            if (preg_match('/^(date|timestamp|datetime)/', $val['type'])) {
                $search[$key.'_dtstart'] = '';
                $search[$key.'_dtend'] = '';
            }
        }
        $toselect              = [];
        $search_array_options  = [];
        $search_category_array = [];
    }
    if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')
        || GETPOST('button_search_x', 'alpha') || GETPOST('button_search.x', 'alpha') || GETPOST('button_search', 'alpha')) {
        $massaction = ''; // Protection to avoid mass action if we force a new search during a mass action confirmation
    }

    // Mass actions delete
    $objectclass = 'Survey';
    $objectlabel = 'Survey';
    $uploaddir   = $conf->digiquali->dir_output;
    require_once DOL_DOCUMENT_ROOT . '/core/actions_massactions.inc.php';

    // Mass actions archive
    require_once __DIR__ . '/../../../saturne/core/tpl/actions/list_massactions.tpl.php';
}

/*
 * View
 */

$title   = $langs->trans('SurveyList');
$helpUrl = '';

saturne_header(0,'', $title, $helpUrl);
if (!empty($fromtype)) {
    print saturne_get_fiche_head($objectLinked, 'survey', $langs->trans('Survey'));

    $linkBack = '<a href="' . DOL_URL_ROOT . '/' . $fromtype . '/list.php?restore_lastsearch_values=1">' . $langs->trans('BackToList') . '</a>';

    saturne_banner_tab($objectLinked, 'fromtype=' . $fromtype . '&fromid', '', 1, 'rowid', ($fromtype == 'productbatch' ? 'batch' : 'ref'));
}

if ($nbLinkableElements == 0) {
    print '<div class="wpeo-notice notice-warning notice-red">';
    print '<div class="notice-content">';
    print '<a href="' . dol_buildpath('/custom/digiquali/admin/sheet.php', 2) . '">' . '<b><div class="notice-subtitle">'.$langs->trans('ConfigElementLinked') . ' : ' . $langs->trans('ConfigSheet') . '</b></a>';
    print '</div>';
    print '</div>';
    print '</div>';
} else {
    require_once __DIR__ . '/../../core/tpl/digiquali_survey_list.tpl.php';
}

// End of page
llxFooter();
$db->close();
